#!/bin/bash

subcommand=$1
shift

jsonnetfile=$1
shift

version=
app=

usage="Usage: plantbuild run/push/show ./plantbuild/test.jsonnet -a=app1 -v=1.0.0"

while getopts "v:a:" opt; do
  case $opt in
    v ) version=$OPTARG
      ;;
    a ) app=$OPTARG
      ;;
    \? )
        echo "$usage"
        exit 1
      ;;
  esac
done

# jsonnetfile="$(pwd)/$jsonnetfile"
if [ -z $jsonnetfile ]; then
    echo "$usage"
    exit 1
fi

if ! [ -e $jsonnetfile ]; then
    echo "$jsonnetfile not exists"
    exit 1
fi

if [ -z $version ]; then
    version=$(git rev-parse HEAD|cut -c 1-6)
fi

dir=`dirname $jsonnetfile`
filename=`basename $jsonnetfile`

case $subcommand in
    run)
        docker run --rm -e RUN=/src/$filename -e VERSION=$version -v `pwd`/$dir:/src registry.theplant-dev.com/theplant/plantbuild | docker-compose -f - run "$app"_test
        ;;
    push)
        docker run --rm -e RUN=/src/$filename -e VERSION=$version -v `pwd`/$dir:/src registry.theplant-dev.com/theplant/plantbuild | docker-compose -f - build build_image_$app && \
        docker run --rm -e RUN=/src/$filename -e VERSION=$version -v `pwd`/$dir:/src registry.theplant-dev.com/theplant/plantbuild | docker-compose -f - push build_image_$app
        ;;
    show)
        docker run --rm -e RUN=/src/$filename -e VERSION=$version -v `pwd`/$dir:/src registry.theplant-dev.com/theplant/plantbuild
        ;;
    * )
        echo "$usage"
        exit 1
        ;;
esac
