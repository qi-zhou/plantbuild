#!/bin/bash

subcommand=$1
shift

jsonnetfile=$1
shift

version=
app=
_app=

buildversion=

usage="Usage: plantbuild run/push/show ./plantbuild/test.jsonnet -a=app1 -v=1.0.0"

while getopts "v:a:b:" opt; do
  case $opt in
    v )
        version=$OPTARG
      ;;
    a )
        app=$OPTARG
        if ! [ -z $app ]; then
            _app=_$OPTARG
        fi
      ;;
    b )
        buildversion=":$OPTARG"
      ;;
    \? )
        echo "$usage"
        exit 1
      ;;
  esac
done

# jsonnetfile="$(pwd)/$jsonnetfile"
if [ -z $jsonnetfile ]; then
    echo "$usage"
    exit 1
fi

if ! [ -e $jsonnetfile ]; then
    echo "$jsonnetfile not exists"
    exit 1
fi

if [ -z $version ]; then
    version=$(git rev-parse HEAD|cut -c 1-7)
fi

tag_version=$(git describe --tags --exact-match 2>/dev/null)

dir=`dirname $jsonnetfile`
filename=`basename $jsonnetfile`

push_image() {
    build_image $1 && \
    docker run --rm -e RUN=/src/$filename -e VERSION=$1 -v `pwd`/$dir:/src registry.theplant-dev.com/theplant/plantbuild$buildversion | docker-compose -f - push build_image$_app
}

build_image() {
    docker run --rm -e RUN=/src/$filename -e VERSION=$1 -v `pwd`/$dir:/src registry.theplant-dev.com/theplant/plantbuild$buildversion | docker-compose -f - build build_image$_app
}

case $subcommand in
    run)
        docker run --rm -e RUN=/src/$filename -e VERSION=$version -v `pwd`/$dir:/src registry.theplant-dev.com/theplant/plantbuild$buildversion | docker-compose -f - run "$app"_test
        ;;
    build)
        build_image "latest" && \
        build_image $version && \
        if ! [ -z $tag_version ]; then
            build_image $tag_version
        fi
        ;;
    push)
        push_image "latest" && \
        push_image $version && \
        if ! [ -z $tag_version ]; then
            push_image $tag_version
        fi
        ;;
    show)
        docker run --rm -e RUN=/src/$filename -e VERSION=$version -v `pwd`/$dir:/src registry.theplant-dev.com/theplant/plantbuild$buildversion
        ;;
    * )
        echo "$usage"
        exit 1
        ;;
esac
